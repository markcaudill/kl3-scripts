#!/bin/sh
# Block entire services using ipset(8) for high performant matching

# List of services to block
as_list='
714	# Apple
8075	# Microsoft
15169	# Google
19679	# Dropbox
20940	# Akamai
32787	# Akamai (other)
32934	# Facebook
'
# Note the escaped &
api_url='https://stat.ripe.net/data/announced-prefixes/data.json?min_peers_seeing=0\&resource='

# Securely write parsed JSON data to temporary file
umask 0177
tmpfile=/tmp/netblock-$(od -N4 -tx /dev/random | tr -d 0[:space:])

curl -s $(printf '%s' "${as_list}" \
		| tr -d -c '[:digit:]\n' \
		| sed "/^$/d; s,^,${api_url},g"
	) \
	| sed -n 's,^ *"prefix": "\(.*\)"$,\1,p' \
	> "${tmpfile}"

setname=netblock

# Do not keep potentially outdated networks
sudo ipset -quiet flush "${setname}"
sudo ipset -quiet flush "${setname}"6

# Create hash tables
sudo ipset -exist create "${setname}" \
	hash:net family inet hashsize 1024 maxelem 4096
sudo ipset -exist create "${setname}"6 \
	hash:net family inet6 hashsize 1024 maxelem 1024

# Add rules on top to be processed first
sudo iptables --table filter --insert OUTPUT 1 \
	--match set --match-set "${setname}" \
	dst --jump REJECT
sudo ip6tables --table filter --insert OUTPUT 1 \
	--match set --match-set "${setname}"6 \
	dst --jump REJECT

# Fill hash tables with networks
grep -F . "${tmpfile}" \
	| xargs -n 1 -I _net_ \
		sudo ipset add "${setname}" _net_

grep -F : "${tmpfile}" \
	| xargs -n 1 -I _net6_ \
		sudo ipset add "${setname}"6 _net6_

trap "rm -f \"${tmpfile}\"" 0 1 2 3 15
