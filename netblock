#!/bin/sh
# Block entire services using ipset(8) for high performant matching

# List of services to block
as_list='
20940	# Akamai
32787	# Akamai (other)
714	# Apple
19679	# Dropbox
32934	# Facebook
15169	# Google
8075	# Microsoft
2906	# Netflix
8403	# Spotify
32590	# Valve
8302	# Zattoo
'
# Note the escaped &
api_url='https://stat.ripe.net/data/announced-prefixes/data.json?min_peers_seeing=0\&resource='

name=$(basename "${0}")

# Securely write parsed JSON data to temporary file
umask 0177
tmpfile=/tmp/"${name}"-$(od -N4 -tx /dev/random | tr -d 0[:space:])
trap "rm -f \"${tmpfile}\"" 0 1 2 3 15

curl -s $(printf '%s' "${as_list}" \
		| tr -d -c '[:digit:]\n' \
		| sed "/^$/d; s,^,${api_url},g"
	) \
	| awk -F\" '/\// { print $4 }' \
	> "${tmpfile}"

block() {
	[ "${1}" = '4' ] && delim=. || delim=:

	# Do not keep potentially outdated networks
	sudo ipset -quiet flush "${name}""${1}"

	# Create hash tables using only as many entries as needed
	sudo ipset -exist create "${name}""${1}" \
		hash:net family inet"${1#4}" hashsize 1024 \
		maxelem $(grep -cF "${delim}" "${tmpfile}")

	# Add rules on top to be processed first
	sudo ip"${1#4}"tables --table filter --insert OUTPUT 1 \
		--match set --match-set "${name}""${1}" \
		dst --jump REJECT

	# Fill hash tables with networks
	while read net; do
		sudo ipset add "${name}""${1}" "${net}"
	done <<- EOF
	$(grep -F "${delim}" "${tmpfile}")
	EOF
}

block 4
block 6

