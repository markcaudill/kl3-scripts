#!/bin/sh
# Connect to remote ${host} through ssh(1) or mosh(1) depending on the
# current network connectivity and execute given command.
# Hosts defined in ssh_config(5) are used, thus only the ${host}, ${MAC} and
# optional ${*_ports} must be provided through the environment.
# ${MAC} defines the hardware address to look for on the local network
# to decide whether the connaction is made within LAN or not.
#
# Usage:	$ env HOST=foo MAC=01:02:03:04:05:06 \
#		      MOSH_PORTS=61234 SSH_PORT=2222 \
#			connect tmux a -t <session-name>
#
# TODO: Get rid of ${MAC}

host="${HOST:?Hostname must not be empty}"
remote_cmd="${@:?Remote command must not be empty}"

# See mosh(1)
mosh_ports="${MOSH_PORTS:-60000:61000}"
ssh_port=${SSH_PORT:-22}

# Port knocking, timeout after 10s
nc='nc -dzw10'

# TODO:	Handle IPv6
if arp -a | head -n2 | tr -s ' ' | grep -Fq "${host} ${MAC:?MAC must not be empty}"
then
	printf home\\n 1>&2
	exec ssh -tp"${ssh_port}" "${host}" ${remote_cmd}
fi

printf 'mobile: IP is...' 1>&2
ip="$(ssh "${host}"-tor curl -sS https://ifcfg.me/ip)"
printf '\b\b\b %s\nConnecting with...' \
	"${ip:?Could not get public IP}" 1>&2

for p in $(printf %s "${mosh_ports}" | tr : ' ')
do
	if ${nc} -u "${ip}" ${p} 2>/dev/null
	then
		printf '\b\b\b Mosh\n' 1>&2
		exec mosh -p "${mosh_ports}" \
			--ssh='ssh -oStrictHostKeyChecking=no' \
			-- "${USER}"@"${ip}" ${remote_cmd}
	fi
done

printf '\b\b\b SSH...' 1>&2
if ${nc} "${ip}" "${ssh_port}"
then
	printf '\b\b\b\n' 1>&2
	exec ssh -tp"${ssh_port}" "${host}" ${remote_cmd}
else
	printf '\b\b\b over Tor\n' 1>&2
	exec ssh -qtp"${ssh_port}" -ostrictHostKeyChecking=no \
		"${host}"-tor ${remote_cmd}
fi
