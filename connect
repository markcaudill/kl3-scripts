#!/bin/sh
# Connect to remote ${host} appropiately depending on current
# network status and execute given command
# Hosts defined in ssh_config(5) are used, thus only the Hostname
# as well as optional ports fort mosh(1) are to be passed through
# the environment
# The remote command is to be specified as argument
#
# Usage:	$ env HOST=foo MOSH_PORTS=61234 \
#			connect tmux a -t <session-name>

host="${HOST:?Hostname must not be empty}"
remote_cmd="${@:?Remote command must not be empty}"

mosh_ports="${MOSH_PORTS:-60000:61000}"

# Test without DNS, timeout after 10s
nc='nc -dnzw10'

# TODO:	Handle IPv6
if arp -a | head -n2 | tr -s ' ' | grep -Fq "${host} ${MAC:?}"
then
	printf home\\n 1>&2
	exec mosh -p "${mosh_ports}" -- "${host}" ${remote_cmd}
fi

printf 'mobile: IP is...' 1>&2
ip="$(ssh "${host}"-tor curl -sS https://ifcfg.me/ip)"
printf '\b\b\b %s\n' "${ip:?Could not get public IP}" 1>&2

printf 'Connecting with...' 1>&2
for p in $(printf %s "${mosh_ports}" | tr : ' ')
do
	if ${nc} -u "${ip}" ${p} 2>/dev/null
	then
		printf '\b\b\b Mosh\n' 1>&2
		exec mosh -p "${mosh_ports}" \
			--ssh='ssh -oStrictHostKeyChecking=no' \
			-- "${USER}"@"${ip}" ${remote_cmd}
	fi
done

printf '\b\b\b SSH...' 1>&2
if ${nc} "${ip}" 22
then
	printf '\b\b\b\n' 1>&2
	exec ssh -t "${host}" ${remote_cmd}
else
	printf '\b\b\b over Tor\n' 1>&2
	exec ssh -qt -ostrictHostKeyChecking=no \
		"${host}"-tor ${remote_cmd}
fi
